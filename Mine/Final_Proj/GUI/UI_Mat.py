# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\Dingus-Elite\Downloads\User Interface.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.backends.backend_qt5agg import NavigationToolbar2QT as NavigationToolbar
from pyqtgraph import PlotWidget
import matplotlib.pyplot as plt
import pyqtgraph as pg

class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Chekov's GAN v.0.0.0.0.069")
        Dialog.setWindowIconText("Chekov's GAN v.0.0.0.0.069")
        Dialog.resize(1338, 753)
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(0, 0, 1351, 771))
        self.label.setStyleSheet("background-image: url(:/bg-image/Background.png);\n"
"")
        self.label.setText("")
        self.label.setObjectName("label")
        self.Material_background = QtWidgets.QFrame(Dialog)
        self.Material_background.setGeometry(QtCore.QRect(900, 120, 428, 48))
        self.Material_background.setStyleSheet("background-color:rgb(94, 94, 94)")
        self.Material_background.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.Material_background.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Material_background.setObjectName("Material_background")
        self.Materials_Header = QtWidgets.QLabel(self.Material_background)
        self.Materials_Header.setGeometry(QtCore.QRect(20, 10, 261, 31))
        self.Materials_Header.setStyleSheet("font: 75 16pt \"Norwester\"; color:rgb(255, 255, 255)\n"
"")
        self.Materials_Header.setObjectName("Materials_Header")
        self.Recommendation_Background = QtWidgets.QFrame(Dialog)
        self.Recommendation_Background.setGeometry(QtCore.QRect(900, 510, 428, 48))
        self.Recommendation_Background.setStyleSheet("background-color:rgb(94, 94, 94)")
        self.Recommendation_Background.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.Recommendation_Background.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Recommendation_Background.setObjectName("Recommendation_Background")
        self.Recommendation = QtWidgets.QLabel(self.Recommendation_Background)
        self.Recommendation.setGeometry(QtCore.QRect(20, 10, 261, 31))
        self.Recommendation.setStyleSheet("font: 75 16pt \"Norwester\"; color:rgb(255, 255, 255)\n"
"")
        self.Recommendation.setObjectName("Recommendation")
        self.MplWidget = PlotWidget(self.label)
        self.MplWidget.setGeometry(QtCore.QRect(14, 176, 871, 391))
        self.MplWidget.setObjectName("MplWidget")
        self.MplWidget.setMouseEnabled(x=False,y=False)
        self.MplWidget.showGrid(x=True,y=True)
        self.MplWidget.setBackground((211,211,211))
        self.MplWidget.getAxis('left').setPen((85,85,85))
        self.MplWidget.getAxis('left').setTextPen((85,85,85))
        self.MplWidget.getAxis('bottom').setPen((85,85,85))
        self.MplWidget.getAxis('bottom').setTextPen((85,85,85))
        self.Choose_Material = QtWidgets.QLabel(Dialog)
        self.Choose_Material.setGeometry(QtCore.QRect(923, 182, 401, 31))
        self.Choose_Material.setStyleSheet("font: 75 15pt \"Adobe Heiti Std R\"; color:rgb(255, 255, 255)")
        self.Choose_Material.setObjectName("Choose_Material")
        self.PP_INDI = QtWidgets.QLabel(Dialog)
        self.PP_INDI.setGeometry(QtCore.QRect(20, 130, 51, 31))
        self.PP_INDI.setStyleSheet("font: 22pt \"Roboto Condensed\";")
        self.PP_INDI.setObjectName("PP_INDI")
        self.Precentage = QtWidgets.QLabel(Dialog)
        self.Precentage.setGeometry(QtCore.QRect(80, 135, 94, 21))
        self.Precentage.setStyleSheet("font: 22pt \"Roboto Condensed\";")
        self.Precentage.setText("")
        self.Precentage.setObjectName("Precentage")
        self.line = QtWidgets.QFrame(Dialog)
        self.line.setGeometry(QtCore.QRect(187, 123, 3, 41))
        self.line.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setGeometry(QtCore.QRect(197, 120, 131, 16))
        self.label_2.setStyleSheet("font: 8pt \"Roboto Condensed\";")
        self.label_2.setObjectName("label_2")
        self.Change_per_val = QtWidgets.QLabel(Dialog)
        self.Change_per_val.setGeometry(QtCore.QRect(197, 140, 121, 21))
        self.Change_per_val.setStyleSheet("font: 22pt \"Roboto Condensed\";\n"
"color: rgb(11, 178, 83);")
        self.Change_per_val.setText("")
        self.Change_per_val.setObjectName("Change_per_val")
        self.UpdateGraph = QtWidgets.QPushButton(Dialog)
        self.UpdateGraph.setGeometry(QtCore.QRect(1120, 470, 101, 31))
        self.UpdateGraph.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font: 11pt \"Roboto Condensed\";")
        self.UpdateGraph.setObjectName("UpdateGraph")
        self.label_3 = QtWidgets.QLabel(Dialog)
        self.label_3.setGeometry(QtCore.QRect(920, 580, 121, 21))
        self.label_3.setStyleSheet("font: 12pt \"Roboto Condensed\";\n"
"color: rgb(255, 255, 255);")
        self.label_3.setObjectName("label_3")
        self.Recommendation_Label_edit = QtWidgets.QLabel(Dialog)
        self.Recommendation_Label_edit.setGeometry(QtCore.QRect(1040, 580, 271, 21))
        self.Recommendation_Label_edit.setStyleSheet("font: 12pt \"Roboto Condensed\";\n"
"color: rgb(255, 255, 255);")
        self.Recommendation_Label_edit.setText("")
        self.Recommendation_Label_edit.setObjectName("Recommendation_Label_edit")
        self.Recommendation_Label_edit.setWordWrap(True)
        self.NumberofDays = QtWidgets.QSpinBox(Dialog)
        self.NumberofDays.setGeometry(QtCore.QRect(1064, 475, 42, 22))
        self.NumberofDays.setStyleSheet("")
        self.NumberofDays.setMinimum(4)
        self.NumberofDays.setMaximum(60)
        self.NumberofDays.setProperty("value", 4)
        self.NumberofDays.setObjectName("NumberofDays")
        self.label_4 = QtWidgets.QLabel(Dialog)
        self.label_4.setGeometry(QtCore.QRect(940, 465, 121, 41))
        self.label_4.setStyleSheet("font: 12pt \"Roboto Condensed\";\n"
"color: rgb(255, 255, 255);")
        self.label_4.setObjectName("label_4")

        self.Cement = QtWidgets.QRadioButton(Dialog)
        self.Cement.setGeometry(QtCore.QRect(920, 250, 191, 21))
        self.Cement.setStyleSheet("border-radius: 15px;\n"
"font: 20pt \"Roboto Condensed\";\n"
"color: rgb(255, 255, 255);")
        self.Cement.setObjectName("Cement")
        self.ConcreteBricks = QtWidgets.QRadioButton(Dialog)
        self.ConcreteBricks.setGeometry(QtCore.QRect(920, 280, 191, 21))
        self.ConcreteBricks.setStyleSheet("border-radius: 15px;\n"
"font: 20pt \"Roboto Condensed\";\n"
"color: rgb(255, 255, 255);")
        self.ConcreteBricks.setObjectName("ConcreteBricks")
        self.Gravel = QtWidgets.QRadioButton(Dialog)
        self.Gravel.setGeometry(QtCore.QRect(920, 310, 191, 21))
        self.Gravel.setStyleSheet("border-radius: 15px;\n"
"font: 20pt \"Roboto Condensed\";\n"
"color: rgb(255, 255, 255);")
        self.Gravel.setObjectName("Gravel")
        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)
        self.Cement.setChecked(True)
        self.UpdateGraph.clicked.connect(lambda: self.draw())
        self.NumberofDays.setValue(1)
        self.Precentage.setText("--")
        self.Change_per_val.setText("--")
        self.Recommendation_Label_edit.setText("--")

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Chekov's GAN v.0.0.0.0.069"))
        self.Materials_Header.setText(_translate("Dialog", "MATERIALS:"))
        self.Recommendation.setText(_translate("Dialog", "SUGGESTION:"))
        self.Choose_Material.setText(_translate("Dialog", "Please select the type of material:"))
        self.PP_INDI.setText(_translate("Dialog", "PPI:"))
        self.label_2.setText(_translate("Dialog", "CHANGE PERCENTAGE:"))
        self.UpdateGraph.setText(_translate("Dialog", "Update Graph"))
        self.label_3.setText(_translate("Dialog", "Recommendation:"))
        self.label_4.setText(_translate("Dialog", "Months to predict:"))
        self.Cement.setText(_translate("Dialog", "Cement"))
        self.ConcreteBricks.setText(_translate("Dialog", "Concrete Bricks"))
        self.Gravel.setText(_translate("Dialog", "Gravel"))




    def draw(self):
        self.Recommendation_Label_edit.setGeometry(QtCore.QRect(1040, 580, 271, 42))
        self.MplWidget.clear()
        input_array, mat_last, pred_list = model_caller_mat.NBEATS_caller(int(self.NumberofDays.value()))
        months = []
        pred_mat = []
        for i in range(1, self.NumberofDays.value()+1):
            months.append(i)
        if self.Gravel.isChecked() == True:
            suggestion, change_per = model_caller_mat.suggestor(input_array, int(self.NumberofDays.value()))
            self.Recommendation_Label_edit.setText(suggestion[0])
            self.Change_per_val.setText(str(change_per[0]))
            self.Precentage.setText(str(mat_last[0]))
            for i in range(0,self.NumberofDays.value()):
                pred_mat.append(pred_list[i][0])
            self.MplWidget.plot(months,pred_mat,pen=pg.mkPen((227,167,47), width=3),symbol='o',symbolPen=(199,142,27), symbolBrush=(199,142,27))
            prev = int(self.NumberofDays.value())
        elif self.ConcreteBricks.isChecked() == True:
            input_array, mat_last, pred_list = model_caller_mat.NBEATS_caller(int(self.NumberofDays.value()))
            suggestion, change_per = model_caller_mat.suggestor(input_array, int(self.NumberofDays.value()))
            self.Recommendation_Label_edit.setText(suggestion[1])
            self.Change_per_val.setText(str(change_per[1]))
            self.Precentage.setText(str(mat_last[1]))
            for i in range(0,self.NumberofDays.value()):
                pred_mat.append(pred_list[i][1])
            self.MplWidget.plot(months,pred_mat,pen=pg.mkPen((227,167,47), width=3),symbol='o',symbolPen=(199,142,27), symbolBrush=(199,142,27))
            prev = int(self.NumberofDays.value())
        elif self.Cement.isChecked() == True:
            input_array, mat_last, pred_list = model_caller_mat.NBEATS_caller(int(self.NumberofDays.value()))
            suggestion, change_per = model_caller_mat.suggestor(input_array, int(self.NumberofDays.value()))
            self.Recommendation_Label_edit.setText(suggestion[2])
            self.Change_per_val.setText(str(change_per[2]))
            self.Precentage.setText(str(mat_last[2]))
            for i in range(0,self.NumberofDays.value()):
                pred_mat.append(pred_list[i][2])
            self.MplWidget.plot(months,pred_mat,pen=pg.mkPen((227,167,47), width=3),symbol='o',symbolPen=(199,142,27), symbolBrush=(199,142,27))
            prev = int(self.NumberofDays.value())



from darts.models import NBEATSModel
from darts.dataprocessing.transformers import Scaler
from darts import TimeSeries
import pandas as pd
import numpy as np
import os

import UI_files_rc
import model_caller_mat
import faulthandler
import darts

#need py -m PyQt5.uic.pyuic -x "C:\Users\Dingus-Elite\Downloads\User Interface.ui" -o "C:\Users\Dingus-Elite\Downloads\UI_Mat2.py"
if __name__ == "__main__":
    import sys
    faulthandler.enable()
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
